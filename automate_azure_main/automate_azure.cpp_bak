
#include <stdio.h>
#include <errno.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <fstream>

using namespace std;
int main(int argc, char *argv[]){

//rm test.azr
//rm current_work.azr

//int ELLEa=2;
//int ELLEb=4;
for (o==0, 0<6; o++)
ofstream outfile;
int res=argv[];
int naming=*argv[x] // don't know how to do this
outfile.open("work_test.azr", ofstream::out | ofstream::app | ofstream::ate);

outfile << '<config>' << endl;
outfile << 'true                                                             #Perform A-Matrix Calculation'  <<endl ;
outfile << '/home+-/amber/ownCloud/Documents/Tech/azure/37K_new/auto'<<naming<<'\t'<<'#Full Path to Output Directory' <<endl;
outfile << '/home+-/amber/ownCloud/Documents/Tech/azure/37K_new/auto'<<naming<<'\t'>>'#Full Path to Checks Directory' <<endl;
outfile << 'none                                                             #Compond Nucleus Check' <<endl ;
outfile << 'none                                                             #Boundary Condition Check' <<endl ;
outfile << 'none                                                             #Data Check' <<endl ;
outfile << 'none                                                             #Lo-Matrix and Penetrability Check'<<endl ;
outfile << 'none                                                             #Legendre Polynomial Check' <<endl ;
outfile << 'none                                                             #Coulomb Amplitudes Check' <<endl ;
outfile << 'none                                                             #Reaction Pathway Check' <<endl ;
outfile << 'none                                                             #Angular Distributions Check' <<endl ;
outfile << '</config>' << endl;
outfile << '<levels>' << endl;
//spin, parity, #entries, s1, s2,s3,s4
int JPI[6][7]={{0,1,1},{1,-1,3,2,2,6},{2,1,4,4,0,4,8},{3,-1,4, 6, 2, 6, 10},{4, 1, 4, 8, 4, 8, 12},{5,-1,4, 10, 6, 10, 14}};
//1st-/ 0+/ 1-/ 2+ 3- 4+ 5-, //2nd //3rd
int PARTIAL[9][4]={{35000},{15000,10000,5000,5000},{10000,15000,5000,5000},{3500},{1500,1000,500,500},{1000,1500,500,500},{350},{150,100,50,50},{100,150,50,50}};
double RESON[14]={6.950, 7.041, 7.176, 7.370, 7.480, 7.801, 8.026, 8.189, 8.322, 8.507, 8.586, 8.672,8.717, 8.924 };

int ELLEa='2';
int ELLEb='4';

#for(a==1; a<=4; a++){
	for (c==1; c<=JPI[a][3]; c++){
	outfile << JPI[a][1] << '\t' << JPI[a][2] <<  '\t'      RESON[a+res]   <<'1      1       1 '<<   JPI[a][C] << '\t' << JPI[a][] << '\t' <<  a << '1       0'   <<   PARTIAL[a][]<< '\t' << '0.5     1       1.5     1       0       1       37      1       19      4.547   4.547   0       0       0.0     0       6.06511 0       0       0 ' << endl;
        
	

		LEVEL="spin    parity       res   fixe       1       1		2ess	2elle       entry      1       0       partial   0.5     1       1.5     1       0       1       37      1       19      4.547   4.547   0       0       0.0     0       6.06511 0       0       0"


};
*/
outfile << "</levels>" << endl;
outfile << "<segmentsData>" << endl;
outfile << "1              1              1              2.5            2.8            134.58         134.58         1              1              0              0	/home/amber/ownCloud/Documents/Tech/azure/37K_new/qqq3_11_27_134.58.dat" << endl;
outfile << "1              1              1              2.5            2.8            138.9          138.9          1              1              0              0	/home/amber/ownCloud/Documents/Tech/azure/37K_new/qqq5_11_27_138.9.dat" << endl;
outfile << "</segmentsData>" << endl;
outfile << "<segmentsTest>" << endl;
outfile << "1              1              1              6.8            7              0.1            0              0              0              0" << endl;
outfile << "</segmentsTest>" << endl;
outfile << "<targetInt>" << endl;
outfile << "0              \"1\"            10             1              0.01           0              0               \"\" 0               0              0 " << endl;
outfile << "</targetInt> " << endl;
outfile << "<lastRun> " << endl;
outfile << "8969" << endl;
outfile << "\"/home/amber/ownCloud/Documents/Tech/azure/37K_new/#1_good_fitV1AZUREOut_aa=1_R=1.out\"" << endl;
outfile << "\"/home/amber/ownCloud/Documents/Tech/azure/37K_new/V1AZUREOut_aa=1_R=1.extrap\"" << endl;
outfile << "0 \"\" "<< endl;
outfile << "-1. -1. -1." << endl;
outfile << "</lastRun>" << endl;


return 0;
}

